<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	<Style x:Key="buttonBaseStyle" TargetType="Button">
		<Style.Setters>
			<Setter Property="Button.Background" Value="{DynamicResource colorBlue}"/>
			<Setter Property="Button.Foreground" Value="{DynamicResource colorText}"/>
			<Setter Property="Button.FontFamily" Value="{DynamicResource fontBaseFamily}"/>
			<Setter Property="Button.FontSize" Value="{DynamicResource fontBaseSize}"/>
			<Setter Property="Button.Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
		<Style.Triggers>
			<Trigger Property="Button.IsMouseOver" Value="True">
				<Setter Property="Button.Background" Value="{DynamicResource colorPurple}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="buttonRoundedStyle" TargetType="Button" BasedOn="{StaticResource buttonBaseStyle}">
		<Style.Setters>
			<Setter Property="Button.Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}" CornerRadius="8" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
		<Style.Triggers>
			<Trigger Property="Button.IsEnabled" Value="False">
				<Setter Property="Button.Foreground" Value="{StaticResource colorGrey}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="buttonRoundedInvisibleStyle" TargetType="Button" BasedOn="{StaticResource buttonBaseStyle}">
		<Style.Setters>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Button.Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border Background="{TemplateBinding Background}" CornerRadius="8">
							<ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
		<Style.Triggers>
			<Trigger Property="Button.IsMouseOver" Value="True">
				<Setter Property="Button.Background">
					<Setter.Value>
						<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
							<GradientStop Color="#8860D0" Offset="0.3"/>
							<GradientStop Color="#5680E9" Offset="1.0"/>
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	
	<Style x:Key="buttonBaseStyleWithImage" TargetType="Button" BasedOn="{StaticResource buttonBaseStyle}">
		<Setter Property="Button.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}">
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
							<TextBlock x:Name="textBlock" VerticalAlignment="Center" Visibility="Hidden" Margin="0,0,10,0">></TextBlock>
							<StackPanel x:Name="stackPanel" Orientation="Horizontal" Margin="0,0,30,0">
								<Image x:Name="image" Source="{DynamicResource ResourceKey=Img}" Width="30" Height="30" Margin="0,0,10,0"/>
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
							</StackPanel>
						</StackPanel>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="stackPanel" Property="Opacity" Value="0.6"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="stackPanel" Property="Opacity" Value="0.6"/>
							<Setter TargetName="textBlock" Property="Visibility" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>